{"version":3,"sources":["./src/app/components/products/add-product/add-product.component.ts","./src/app/components/products/add-product/add-product.component.html","./src/app/core/interceptors/index.ts","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/validators/unique-email.validator.ts","./src/app/core/interceptors/error-interceptor.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/validators/form.validator.ts","./src/app/core/guards/auth.guard.ts","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/validators/name.validator.ts","./src/app/access-api.service.ts","./src/app/components/products/remove-product/remove-product.component.ts","./src/app/components/products/remove-product/remove-product.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/products/edit-product/edit-product.component.ts","./src/app/components/products/edit-product/edit-product.component.html","./src/app/app.module.ts","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/products/show-products/show-products.component.ts","./src/app/components/products/show-products/show-products.component.html","./src/app/components/products/details-product/details-product.component.ts","./src/app/components/products/details-product/details-product.component.html","./src/app/core/guards/product.resolver.ts","./src/app/handle-error.service.ts","./src/app/components/user/update-user/update-user.component.ts","./src/app/components/user/update-user/update-user.component.html","./src/app/core/interceptors/headers-interceptor.ts","./src/app/app-routing.module.ts","./src/app/core/guards/products.resolver.ts","./src/app/components/user/user.component.ts","./src/app/components/user/user.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { AccessAPIService } from './../../../access-api.service';\nimport { Product } from './../../../core/models/product';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit {\n\n  constructor(private accessAPIService: AccessAPIService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  addNewProduct(name: string, price: number, quantity: number): void {\n    const product: Product = {\n      ID: 0,\n      Name: name,\n      Price: price,\n      Quantity: quantity,\n      ImageName: null\n    }\n\n    const urlSection = 'Product';\n\n    this.accessAPIService.add(urlSection, product).subscribe(\n      data => {\n        this.router.navigate(['products', 'show']);\n      },\n      error => console.log(error)\n    );\n  }\n}\n","<div class=\"alert alert-secondary\">\n\n  <form (ngSubmit)=\"addNewProduct(name.value, price.value, quantity.value)\" class=\"m-4\">\n    <div class=\"row form-group\">\n      <label for=\"name\" class=\"col-1 col-form-label p-3 text-sm-right\">Name : </label>\n      <input id=\"name\" class=\"col-3 form-control\" type=\"text\" placeholder=\"Name\" #name />\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n\n    <div class=\"row form-group\">\n      <label for=\"price\" class=\"col-1 col-form-label p-3 text-sm-right\">Price : </label>\n      <input id=\"price\" class=\"col-3 form-control\" type=\"number\" placeholder=\"Price\" #price />\n    </div>\n\n    <div class=\"row form-group\">\n      <label for=\"quantity\" class=\"col-1 col-form-label p-3 text-sm-right\">Quantity :  </label>\n      <input id=\"quantity\" class=\"col-3 form-control\" type=\"number\" placeholder=\"Quantity\" #quantity />\n    </div>\n\n    <input type=\"submit\" value=\"Add New Product\" class=\"btn btn-primary\"/>\n    <a routerLink=\"../show\" class=\"btn btn-secondary ml-2\">Back to List</a>\n  </form>\n\n</div>\n","import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { ErrorInterceptor } from \"./error-interceptor\";\r\nimport { HeadersInterceptor } from \"./headers-interceptor\";\r\n\r\nexport const HTTP_INTERCEPTOR_PROVIDERS = [{\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: HeadersInterceptor,\r\n  multi: true // we will use many inceptors\r\n},\r\n{\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: ErrorInterceptor,\r\n  multi: true // we will use many inceptors\r\n}\r\n];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Observable, of } from 'rxjs';\r\nimport { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\r\nimport { AccessAPIService } from '../access-api.service';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nexport function asyncUniqueEmailValidator(accessAPIService: AccessAPIService): AsyncValidatorFn {\r\n\r\n  return (control: AbstractControl): Observable<ValidationErrors> => {\r\n\r\n    return accessAPIService.isUniqueEmail(control.value).pipe(\r\n\r\n      map((response: {isUnique: boolean}) => {\r\n        return response.isUnique ? null : {existingEmail: true};\r\n      }),\r\n      catchError(() => of(null))\r\n    );\r\n  };\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    // The logic will be here ...\r\n    console.log('in the error interceptor => ', req, next);\r\n\r\n    // catch the errors globally instead of HandleErrorService\r\n    return next.handle(req).pipe(\r\n      catchError((error) => {\r\n        console.log('Error Interceptor => ', error.message);\r\n        return of(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  isAuthorize: false,\n  userID: 0\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=\"alert alert-secondary\">\n  <h3 class=\"text-center m-2 text-primary\">Home Component</h3>\n  <h3 class=\"alert alert-danger m-4 text-center\">Alqemam Technology</h3>\n  <h4 class=\"alert alert-danger text-center\">\n    Alqemam task, under the observation of Eng. Fatma Gomaa\n  </h4>\n\n  <br /><br /><br /><br />\n</div>\n","import { ValidatorFn, FormGroup } from '@angular/forms';\r\n\r\nexport function validateFormPasswordMatch(pass:string,\r\n  confirmPass:string): ValidatorFn {\r\n\r\n  return (formGroup: FormGroup): null => {\r\n\r\n    const password = formGroup.controls[pass];\r\n    const confirmPassword = formGroup.controls[confirmPass];\r\n\r\n    if(password.dirty && confirmPassword.dirty &&\r\n      confirmPassword.value !== password.value) {\r\n\r\n      confirmPassword.setErrors({\r\n        passwordNotMatch: true\r\n      });\r\n    } else if(confirmPassword.value == password.value && confirmPassword.dirty){\r\n      confirmPassword.setErrors(null);\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n","import { environment as env } from './../../../environments/environment';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRoute, ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if(! env.isAuthorize) {\r\n      this.router.navigateByUrl('login');\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"alert alert-warning mt-4\">\n\n  <a routerLink=\"show\" routerLinkActive=\"active-link\" class=\"btn btn-light m-2\">Show All</a>\n  <a routerLink=\"add\" routerLinkActive=\"active-link\" class=\"btn btn-light m-2\">Add new Product</a>\n  <span class=\"ml-5 text-danger\">Products Container</span>\n\n  <router-outlet></router-outlet>\n\n</div>\n","import { environment as env } from './../environments/environment';\nimport { AfterViewChecked, Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewChecked, OnChanges {\n  title = 'app';\n\n  constructor() {}\n\n  ngAfterViewChecked(): void {\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n  }\n}\n","<div class=\"container\">\n  <h1 class=\"text-center\">Root Component</h1>\n\n  <nav class=\"navbar navbar-expand-sm bg-light navbar-dark mb-4\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a routerLink=\"home\" routerLinkActive=\"active-link\"\n          class=\"m-1 btn btn-light\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"products\" routerLinkActive=\"active-link\"\n          class=\"m-1 btn btn-light\">Products</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"user\" routerLinkActive=\"active-link\"\n          class=\"m-1 btn btn-light\">User Data</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"login\" routerLinkActive=\"active-link\"\n          class=\"m-1 btn btn-light\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"registration\" routerLinkActive=\"active-link\"\n          class=\"m-1 btn btn-light\">Registration</a>\n      </li>\n    </ul>\n  </nav>\n\n  <router-outlet></router-outlet>\n\n  <br /><br />\n  <h4 class=\"alert alert-dark m-5 text-center\">Footer</h4>\n</div>\n","import { AbstractControl, ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function validateName(nameRegex: RegExp): ValidatorFn {\r\n\r\n  return (control:AbstractControl): {[key: string]: boolean} | null => {\r\n\r\n    if(control.value.match(nameRegex)) {\r\n      return {invalidName: true};\r\n    }\r\n\r\n    return null;\r\n  };\r\n}\r\n","import { HandleErrorService } from './handle-error.service';\nimport { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest } from '@angular/common/http';\nimport { stringify } from 'querystring';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccessAPIService {\n  private readonly baseUrl = 'http://localhost:53011/api';\n  public readonly photosUrl = '';\n  public readonly userUrl = 'User';\n  public readonly registrationUrl = 'registration';\n  public readonly productUrl = 'Product';\n\n  constructor(private httpClient: HttpClient, private handleError: HandleErrorService) { }\n\n  isUniqueEmail(email: string): Observable<any> {\n    const urlSection = 'Registration/IsUniqueEmail';\n    const headers = {'content-type': 'application/json'};\n    const body = JSON.stringify({email: email});\n\n    return this.httpClient\n               .post(`${this.baseUrl}/${urlSection}`, body, {'headers': headers});\n  }\n\n  getAll(urlSection: string): Observable<any> {\n    return this.httpClient\n               .get(`${this.baseUrl}/${urlSection}`)\n               .pipe(catchError(this.handleError.logError));\n  }\n\n  getOne(urlSection: string, id: number): Observable<any> {\n    return this.httpClient\n               .get(`${this.baseUrl}/${urlSection}/${id}`)\n               .pipe(catchError(this.handleError.logError));\n  }\n\n  add(urlSection: string, entity:any): Observable<any>{\n    const body = JSON.stringify(entity);\n    const headers = {'content-type': 'application/json'};\n\n    return this.httpClient\n              .post(`${this.baseUrl}/${urlSection}`,\n                          body, {'headers': headers})\n              .pipe(catchError(this.handleError.logError));\n  }\n\n  update(urlSection: string, id: number, entity:any): Observable<any>{\n    const body = JSON.stringify(entity);\n    const headers = {'content-type': 'application/json'};\n\n    return this.httpClient\n              .put(`${this.baseUrl}/${urlSection}/${id}`,\n                          body, {'headers': headers})\n              .pipe(catchError(this.handleError.logError));\n  }\n\n  delete(urlSection: string, id: number): Observable<any>{\n    return this.httpClient\n               .delete(`${this.baseUrl}/${urlSection}/${id}`)\n               .pipe(catchError(this.handleError.logError));\n  }\n\n  uploadPhoto(urlSection: string, val: any) {\n    this.httpClient.post(`${this.baseUrl}/${urlSection}`, val)\n                    .pipe(catchError(this.handleError.logError));\n  }\n}\n","import { Product } from './../../../core/models/product';\nimport { Component, OnInit } from '@angular/core';\nimport { AccessAPIService } from 'src/app/access-api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-remove-product',\n  templateUrl: './remove-product.component.html',\n  styleUrls: ['./remove-product.component.css']\n})\nexport class RemoveProductComponent implements OnInit {\n\n  readonly urlSection: string = 'Product';\n  product: Product;\n\n  constructor(private accessAPIService: AccessAPIService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    const id = this.activatedRoute.snapshot.params.id;\n\n    this.accessAPIService.getOne(this.urlSection, id).subscribe(\n      data => this.product = data,\n      error => console.log(error)\n    )\n  }\n\n  removeProduct(id: number): void {\n    this.accessAPIService.delete(this.urlSection, id).subscribe(\n      data => {\n        this.router.navigate(['products', 'show']);\n      },\n      error => console.log(error)\n    );\n  }\n\n}\n","\n<div class=\"alert alert-secondary\">\n\n  <div *ngIf=\"product\">\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label text-right\">ID : </label>\n      <input class=\"col-3 form-control-plaintext\" value=\"{{product.ID}}\" />\n    </div>\n\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label text-right p-2\">Name : </label>\n      <input class=\"col-3 form-control-plaintext\" value=\"{{product.Name}}\" />\n    </div>\n\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label text-right p-2\">Price : </label>\n      <input class=\"col-3 form-control-plaintext\" value=\"{{product.Price}}\" />\n    </div>\n\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label text-right p-2\">Quantity : </label>\n      <input class=\"col-3 form-control-plaintext\" value=\"{{product.Quantity}}\" />\n    </div>\n\n    <a routerLink=\"../../show\" class=\"btn btn-secondary mt-2\">Back to List</a>\n    <button (click)=\"removeProduct(product.ID)\" class=\"btn btn-danger mt-2 ml-2\">Remove</button>\n  </div>\n\n</div>\n","import { LoginModel } from './../../core/models/login-model';\r\nimport { environment as env } from './../../../environments/environment';\r\nimport { Router } from '@angular/router';\r\nimport { AccessAPIService } from 'src/app/access-api.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styles: []\r\n})\r\nexport class LoginComponent {\r\n\r\n  private static readonly emailPattern: string =\r\n    '^[a-zA-Z]{3,}([a-zA-Z0-9.]{3,}){0,}@[a-zA-Z]{2,}([a-zA-Z0-9.]{3,}){0,}.com$';\r\n\r\n  emailControl: FormControl;\r\n  passwordControl: FormControl;\r\n  loginForm: FormGroup;\r\n  isNotAuthorize: boolean;\r\n\r\n  constructor(private accessAPIService: AccessAPIService,\r\n              private router: Router) {\r\n\r\n    this.initFormControls();\r\n    this.createForm();\r\n    this.isNotAuthorize = false;\r\n  }\r\n\r\n  private initFormControls(): void {\r\n    this.emailControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n        Validators.pattern(LoginComponent.emailPattern)\r\n      ],\r\n      asyncValidators: [\r\n      ],\r\n      updateOn: 'blur'\r\n    });\r\n    this.passwordControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ],\r\n      asyncValidators: [\r\n      ],\r\n      updateOn: 'blur'\r\n    });\r\n  }\r\n\r\n  private createForm(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: this.emailControl,\r\n      password: this.passwordControl\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    // send to server\r\n    if(this.loginForm.valid) {\r\n\r\n      const urlSection = 'Login';\r\n\r\n      const user: LoginModel = {\r\n        Email: this.emailControl.value,\r\n        Password: this.passwordControl.value\r\n      };\r\n\r\n      this.checkUser(urlSection, user).then(\r\n        () => {\r\n          if(!env.isAuthorize)\r\n            this.isNotAuthorize = true;\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onReset(): void {\r\n    // clear the form\r\n    this.loginForm.reset();\r\n  }\r\n\r\n  private saveToken(tokenObject: {token: string, ID: number} | null): void {\r\n\r\n    // save the token in the session storage for example\r\n    if(tokenObject != null) {\r\n      const tokenString = tokenObject.token;\r\n      const userID = tokenObject.ID;\r\n\r\n      env.isAuthorize = true;\r\n      env.userID = userID;\r\n      console.log(userID);\r\n      sessionStorage.setItem('token', tokenString);\r\n\r\n      this.router.navigate(['home']);\r\n    }\r\n  }\r\n\r\n  private async checkUser(urlSection: string, user: LoginModel): Promise<any> {\r\n\r\n    return this.accessAPIService.add(urlSection, user).subscribe(\r\n      data => this.saveToken(data),\r\n      error => console.log('checkUser Error => ', error)\r\n    )\r\n  }\r\n\r\n\r\n}\r\n","<h2>Login</h2>\r\n\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <table class=\"table table-bordered table-responsive\">\r\n    <tbody>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"email\">Email : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"email\" type=\"email\" formControlName=\"email\" />\r\n          <ng-container *ngIf=\"emailControl.invalid && emailControl.dirty\">\r\n            <span *ngIf=\"emailControl.errors.required\">\r\n              Email is required\r\n            </span>\r\n            <span *ngIf=\"emailControl.errors.pattern\">\r\n              Invalid Email\r\n            </span>\r\n          </ng-container>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"password\">Password : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n          <span *ngIf=\"passwordControl.invalid && passwordControl.dirty\">\r\n            Invalid Password\r\n          </span>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input type=\"submit\" value=\"Login\" [disabled]=\"loginForm.invalid\" />\r\n        </td>\r\n        <td>\r\n          <input type=\"reset\" value=\"Reset\" (click)=\"onReset()\" />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</form>\r\n\r\n<h3 class=\"alert alert-danger\" *ngIf=\"isNotAuthorize\">Invalid Email or Password</h3>\r\n","import { ActivatedRoute, Router } from '@angular/router';\nimport { AccessAPIService } from './../../../access-api.service';\nimport { Product } from './../../../core/models/product';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n\n  readonly urlSection: string = 'Product';\n  product: Product;\n\n  constructor(private accessAPIService: AccessAPIService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    const id = this.activatedRoute.snapshot.params.id;\n\n    this.accessAPIService.getOne(this.urlSection, id).subscribe(\n      data => this.product = data,\n      error => console.log(error)\n    );\n  }\n\n  updateProduct(name: string, price: number, quantity: number): void {\n    const id = this.activatedRoute.snapshot.params.id;\n    const product: Product = {\n      ID: this.product.ID,\n      Name: name,\n      Price: price,\n      Quantity: quantity,\n      ImageName: null\n    };\n\n    this.accessAPIService.update(this.urlSection, id, product).subscribe(\n      data => {\n        this.product = data;\n        this.router.navigate(['products', 'show']);\n      },\n      error => console.log(error)\n    );\n  }\n\n}\n","<div class=\"alert alert-secondary\">\n\n  <form (ngSubmit)=\"updateProduct(name.value, price.value, quantity.value)\" *ngIf=\"product\">\n    <div class=\"row form-group\">\n      <label for=\"name\" class=\"col-1 col-form-label p-2\">Name : </label>\n      <input id=\"name\" class=\"col-3 form-control\" type=\"text\" placeholder=\"Name\" #name value=\"{{product.Name}}\" />\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n\n    <div class=\"row form-group\">\n      <label for=\"price\" class=\"col-1 col-form-label p-2\">Price : </label>\n      <input id=\"price\" class=\"col-3 form-control\" type=\"number\" placeholder=\"Price\" #price value=\"{{product.Price}}\" />\n    </div>\n\n    <div class=\"row form-group\">\n      <label for=\"quantity\" class=\"col-1 col-form-label p-2\">Quantity : </label>\n      <input id=\"quantity\" class=\"col-3 form-control\" type=\"number\" placeholder=\"Quantity\" #quantity value=\"{{product.Quantity}}\" />\n    </div>\n\n    <input type=\"submit\" value=\"Update\" class=\"btn btn-success\"/>\n    <a routerLink=\"../../show\" class=\"btn btn-primary ml-2\">Back</a>\n  </form>\n\n\n</div>\n","import { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { AddProductComponent } from './components/products/add-product/add-product.component';\nimport { EditProductComponent } from './components/products/edit-product/edit-product.component';\nimport { RemoveProductComponent } from './components/products/remove-product/remove-product.component';\nimport { ShowProductsComponent } from './components/products/show-products/show-products.component';\nimport { DetailsProductComponent } from './components/products/details-product/details-product.component';\nimport { HTTP_INTERCEPTOR_PROVIDERS } from './core/interceptors';\nimport { UserComponent } from './components/user/user.component';\nimport { UpdateUserComponent } from './components/user/update-user/update-user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent,\n    ErrorComponent,\n    ProductsComponent,\n    AddProductComponent,\n    EditProductComponent,\n    RemoveProductComponent,\n    ShowProductsComponent,\n    DetailsProductComponent,\n    UserComponent,\n    UpdateUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    HTTP_INTERCEPTOR_PROVIDERS\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Router } from '@angular/router';\r\nimport { AccessAPIService } from './../../access-api.service';\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { validateFormPasswordMatch } from '../../validators/form.validator';\r\nimport { validateName } from '../../validators/name.validator';\r\nimport { asyncUniqueEmailValidator } from 'src/app/validators/unique-email.validator';\r\nimport { User } from 'src/app/core/models/user';\r\nimport { environment as env } from './../../../environments/environment';\r\nimport { RegistrationModel } from 'src/app/core/models/registration-model';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styles: []\r\n})\r\nexport class RegistrationComponent {\r\n\r\n  private static readonly emailPattern: string =\r\n    '^[a-zA-Z]{3,}([a-zA-Z0-9.]{3,}){0,}@[a-zA-Z]{2,}([a-zA-Z0-9.]{3,}){0,}.com$';\r\n    // valid email: abc@abc.com | abc.ar@abc.ar.com | abc01.ar01@abc.ar.com\r\n    // invalid email: 123abc@abc.com | abc@abc.xyz | ab@a.com\r\n\r\n  private static readonly namePattern: RegExp = /[0-9]/g;\r\n  // private static readonly namePattern: string = '/^[a-zA-Z]{3,}$/';\r\n\r\n  registrationForm: FormGroup;\r\n  nameControl: FormControl;\r\n  ageControl: FormControl;\r\n  addressControl: FormControl;\r\n  emailControl: FormControl;\r\n  passwordControl: FormControl;\r\n  confirmPasswordControl: FormControl;\r\n\r\n  constructor(private accessAPIService: AccessAPIService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initFormControls();\r\n    this.createForm();\r\n  }\r\n\r\n  initFormControls(): void {\r\n    this.nameControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n        // Validators.pattern(RegistrationComponent.namePattern)\r\n        Validators.minLength(3),\r\n        validateName(RegistrationComponent.namePattern)\r\n      ],\r\n      updateOn: 'blur'\r\n    });\r\n\r\n    this.ageControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n      ],\r\n      asyncValidators: [\r\n      ]\r\n    });\r\n\r\n    this.addressControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ],\r\n      asyncValidators: [\r\n      ]\r\n    });\r\n\r\n    this.emailControl = new FormControl('', {\r\n      validators: [\r\n        Validators.required,\r\n        Validators.pattern(RegistrationComponent.emailPattern)\r\n      ],\r\n      asyncValidators: [\r\n        asyncUniqueEmailValidator(this.accessAPIService)\r\n      ],\r\n      updateOn: 'blur'\r\n    });\r\n\r\n    this.passwordControl = new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(3)\r\n    ]);\r\n    this.confirmPasswordControl = new FormControl('', [\r\n      Validators.required,\r\n    ]);\r\n  }\r\n\r\n  createForm(): void {\r\n    this.registrationForm = new FormGroup({\r\n      name: this.nameControl,\r\n      age: this.ageControl,\r\n      address: this.addressControl,\r\n      email: this.emailControl,\r\n      password: this.passwordControl,\r\n      confirmPassword: this.confirmPasswordControl\r\n      },\r\n      validateFormPasswordMatch('password', 'confirmPassword')\r\n    );\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const user: RegistrationModel = {\r\n      Name: this.nameControl.value,\r\n      Age: this.ageControl.value,\r\n      Address: this.addressControl.value,\r\n      Email: this.emailControl.value,\r\n      Password: this.passwordControl.value,\r\n      ConfirmPassword: this.confirmPasswordControl.value\r\n    };\r\n\r\n    this.accessAPIService.add(this.accessAPIService.registrationUrl, user).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.saveToken(data);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onReset(): void {\r\n    // clear the form\r\n    // we will get an exception if we\r\n    // didn't disable the validators\r\n    this.nameControl.clearValidators();\r\n    this.registrationForm.reset();\r\n  }\r\n\r\n  nameOnInput(): void {\r\n    this.nameControl.setValidators([\r\n      Validators.required,\r\n      Validators.minLength(3),\r\n      validateName(RegistrationComponent.namePattern)\r\n    ]);\r\n  }\r\n\r\n  private saveToken(tokenObject: {token: string, ID: number} | null): void {\r\n\r\n    if(tokenObject != null) {\r\n      // save the token in the session storage for example\r\n      const tokenString = tokenObject.token;\r\n      const userID = tokenObject.ID;\r\n\r\n      env.isAuthorize = true;\r\n      env.userID = userID;\r\n\r\n      console.log(userID);\r\n\r\n      sessionStorage.setItem('token', tokenString);\r\n\r\n      this.router.navigate(['home']);\r\n    }\r\n  }\r\n}\r\n","<h2>Registration</h2>\r\n\r\n<form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\r\n  <table class=\"table table-bordered table-responsive\">\r\n    <tbody>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"name\">Name : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"name\" type=\"text\" formControlName=\"name\" (input)=\"nameOnInput()\" />\r\n          <ng-container *ngIf=\"nameControl.invalid && nameControl.dirty\">\r\n            <span *ngIf=\"nameControl.errors.invalidName\">\r\n              Invalid Name\r\n            </span>\r\n            <span *ngIf=\"nameControl.errors.minlength\">\r\n              Name is too short\r\n            </span>\r\n            <span *ngIf=\"nameControl.errors.required\">\r\n              Name is required\r\n            </span>\r\n          </ng-container>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"age\">Age : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"age\" type=\"number\" formControlName=\"age\" />\r\n          <ng-container *ngIf=\"ageControl.invalid && ageControl.dirty\">\r\n            <span class=\"ml-2\" *ngIf=\"ageControl.errors.required\">\r\n              Age is required\r\n            </span>\r\n          </ng-container>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"address\">Address : </label>\r\n        </td>\r\n        <td>\r\n            <input id=\"address\" type=\"text\" formControlName=\"address\" />\r\n            <ng-container *ngIf=\"addressControl.invalid && addressControl.dirty\">\r\n              <span class=\"ml-2\" *ngIf=\"addressControl.errors.minlength\">\r\n                Address is too short\r\n              </span>\r\n              <span class=\"ml-2\" *ngIf=\"addressControl.errors.required\">\r\n                Address is required\r\n              </span>\r\n            </ng-container>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"email\">Email : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"email\" type=\"email\" formControlName=\"email\" />\r\n          <ng-container *ngIf=\"emailControl.invalid && emailControl.dirty\">\r\n            <span class=\"ml-2\" *ngIf=\"emailControl.errors.pattern\">\r\n              Invalid Email\r\n            </span>\r\n            <span class=\"ml-2\" *ngIf=\"emailControl.errors.minlength\">\r\n              Email is too short\r\n            </span>\r\n            <span class=\"ml-2\" *ngIf=\"emailControl.errors.required\">\r\n              Email is required\r\n            </span>\r\n            <span class=\"ml-2\" *ngIf=\"emailControl.errors.existingEmail\">\r\n              Email Existing\r\n            </span>\r\n          </ng-container>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"password\">Password : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n          <span *ngIf=\"passwordControl.invalid && passwordControl.dirty\">\r\n            Invalid Password\r\n          </span>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"\">\r\n          <label for=\"confirmPassword\">Confirm Password : </label>\r\n        </td>\r\n        <td>\r\n          <input id=\"confirmPassword\" type=\"password\" formControlName=\"confirmPassword\" />\r\n          <span *ngIf=\"confirmPasswordControl.errors?.passwordNotMatch &&\r\n          confirmPasswordControl.dirty && passwordControl.dirty\">\r\n            Password Not Match\r\n          </span>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td>\r\n          <input type=\"submit\" value=\"Register\" [disabled]=\"registrationForm.invalid\" />\r\n        </td>\r\n        <td>\r\n          <input type=\"reset\" value=\"Reset\" (click)=\"onReset()\" />\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</form>\r\n\r\n<p>Form Status is {{ registrationForm.status }}</p>\r\n","import { ActivatedRoute } from '@angular/router';\nimport { Product } from './../../../core/models/product';\nimport { Component, OnInit } from '@angular/core';\nimport { AccessAPIService } from 'src/app/access-api.service';\n\n@Component({\n  selector: 'app-show-products',\n  templateUrl: './show-products.component.html',\n  styleUrls: ['./show-products.component.css']\n})\nexport class ShowProductsComponent implements OnInit {\n\n  productList: Product[];\n\n  constructor(private accessAPIService: AccessAPIService, private activatedRoute: ActivatedRoute) {\n    this.productList = [];\n  }\n\n  ngOnInit(): void {\n    this.refreshProductList();\n    console.log('ngOnInit');\n  }\n\n  refreshProductList(): void {\n    this.activatedRoute.data.subscribe(\n      (data: {myData: Product[]}) => {\n        this.productList = data.myData;\n      },\n      error => console.log(error)\n    );\n\n  }\n\n}\n","<div class=\"alert alert-secondary\">\n\n  <table class=\"mt-3 table table-striped table-bordered\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Price</th>\n        <th>Quantity</th>\n        <th>Options</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let product of productList\">\n        <td>{{product.ID}}</td>\n        <td>{{product.Name}}</td>\n        <td>{{product.Price}}</td>\n        <td>{{product.Quantity}}</td>\n        <td>\n          <a [routerLink]=\"['../details', product.ID]\" class=\"m-1 btn btn-info\">Details</a>\n          <a [routerLink]=\"['../edit', product.ID]\" class=\"m-1 btn btn-primary\">Edit</a>\n          <a [routerLink]=\"['../remove', product.ID]\" class=\"m-1 btn btn-danger\">Delete</a>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-details-product',\n  templateUrl: './details-product.component.html',\n  styleUrls: ['./details-product.component.css']\n})\nexport class DetailsProductComponent implements OnInit {\n\n  product: any;\n\n  constructor(private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.data.subscribe(\n      data => this.product = data.items,\n      error => console.log(error)\n    )\n  }\n}\n","<div class=\"alert alert-secondary\">\n\n  <div class=\"row form-group\">\n    <label class=\"col-1 col-form-label text-right\">ID : </label>\n    <label class=\"col-3 form-control-plaintext\">{{product.ID}}</label>\n  </div>\n\n  <div class=\"row form-group\">\n    <label class=\"col-1 col-form-label text-right p-2\">Name : </label>\n    <label class=\"col-3 form-control-plaintext\">{{product.Name}}</label>\n  </div>\n\n  <div class=\"row form-group\">\n    <label class=\"col-1 col-form-label text-right p-2\">Price : </label>\n    <label class=\"col-3 form-control-plaintext\">{{product.Price}}</label>\n  </div>\n\n  <div class=\"row form-group\">\n    <label class=\"col-1 col-form-label text-right p-2\">Quantity : </label>\n    <label class=\"col-3 form-control-plaintext\">{{product.Quantity}}</label>\n  </div>\n\n  <a routerLink=\"../../show\" class=\"btn btn-secondary mt-2\">Back to List</a>\n\n</div>\n","import { Observable, of } from 'rxjs';\r\nimport { AccessAPIService } from 'src/app/access-api.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductResolver implements Resolve<any> {\r\n\r\n  constructor(private accessAPIService: AccessAPIService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n    const id: number = route.params.id;\r\n\r\n    return this.accessAPIService.getOne(this.accessAPIService.productUrl, id).pipe(\r\n      catchError(() => {\r\n        return of('Not Found');\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HandleErrorService {\n\n  constructor() { }\n\n  logError(error: HttpErrorResponse): Observable<never> {\n    if(error instanceof ErrorEvent) {\n      console.log('Client Side Error');\n    } else {\n      console.log('Server Side Error');\n    }\n\n    return throwError('Something went wrong');\n  }\n}\n","import { environment as env } from './../../../../environments/environment';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccessAPIService } from 'src/app/access-api.service';\nimport { User } from 'src/app/core/models/user';\nimport { asyncUniqueEmailValidator } from 'src/app/validators/unique-email.validator';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  private static readonly emailPattern: string =\n    '^[a-zA-Z]{3,}([a-zA-Z0-9.]{3,}){0,}@[a-zA-Z]{2,}([a-zA-Z0-9.]{3,}){0,}.com$';\n\n  user: User;\n\n  userForm: FormGroup;\n  nameControl: FormControl;\n  ageControl: FormControl;\n  addressControl: FormControl;\n  emailControl: FormControl;\n\n  constructor(private accessAPIService: AccessAPIService, private router: Router) {}\n\n    ngOnInit(): void {\n      this.accessAPIService.getOne(this.accessAPIService.userUrl, env.userID).toPromise().then(\n        data => this.user = data,\n        error => console.log(error)\n      ).finally(\n        () => {\n          this.initFormControls();\n          this.createFormGroup();\n        }\n      );\n    }\n\n    private initFormControls(): void {\n      this.nameControl = new FormControl(this.user.Name, {\n        validators: [\n          Validators.required,\n          Validators.minLength(3)\n        ],\n        asyncValidators: [\n        ]\n      });\n\n      this.ageControl = new FormControl(this.user.Age, {\n        validators: [\n          Validators.required,\n        ],\n        asyncValidators: [\n        ]\n      });\n\n      this.addressControl = new FormControl(this.user.Address, {\n        validators: [\n          Validators.required,\n          Validators.minLength(3)\n        ],\n        asyncValidators: [\n        ]\n      });\n\n      this.emailControl = new FormControl(this.user.Email, {\n        validators: [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.pattern(UpdateUserComponent.emailPattern)\n        ],\n        asyncValidators: [\n          asyncUniqueEmailValidator(this.accessAPIService)\n        ],\n        updateOn: 'blur'\n      });\n    }\n\n    private createFormGroup(): void {\n      this.userForm = new FormGroup({\n        name: this.nameControl,\n        age: this.ageControl,\n        address: this.addressControl,\n        email: this.emailControl\n      });\n    }\n\n    updateUser(): void {\n      const localUser: User = {\n        ID: this.user.ID,\n        Name: this.nameControl.value,\n        Age: this.ageControl.value,\n        Address: this.addressControl.value,\n        Email: this.emailControl.value,\n        Password: this.user.Password\n      };\n\n      this.accessAPIService.update(this.accessAPIService.userUrl, this.user.ID, localUser).toPromise(\n      ).then(\n        data => this.user = data,\n        error => console.log(error)\n      ).finally(\n        () => this.router.navigate(['home'])\n      )\n    }\n}\n","<div class=\"alert alert-danger\">\n\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"updateUser()\" *ngIf=\"user\">\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Name : </label>\n      <input class=\"col-3 form-control\" formControlName=\"name\" type=\"text\" placeholder=\"Name\" value=\"{{user.Name}}\" />\n        <ng-container *ngIf=\"nameControl.invalid && nameControl.dirty\">\n          <span class=\"ml-2\" *ngIf=\"nameControl.errors.minlength\">\n            Name is too short\n          </span>\n          <span class=\"ml-2\" *ngIf=\"nameControl.errors.required\">\n            Name is required\n          </span>\n        </ng-container>\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Age : </label>\n      <input class=\"col-3 form-control\" formControlName=\"age\" type=\"number\" placeholder=\"Age\" value=\"{{user.Age}}\" />\n        <ng-container *ngIf=\"ageControl.invalid && ageControl.dirty\">\n          <span class=\"ml-2\" *ngIf=\"ageControl.errors.required\">\n            Age is required\n          </span>\n        </ng-container>\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Address : </label>\n      <input class=\"col-3 form-control\" formControlName=\"address\" type=\"text\" placeholder=\"Address\" value=\"{{user.Address}}\" />\n        <ng-container *ngIf=\"addressControl.invalid && addressControl.dirty\">\n          <span class=\"ml-2\" *ngIf=\"addressControl.errors.minlength\">\n            Address is too short\n          </span>\n          <span class=\"ml-2\" *ngIf=\"addressControl.errors.required\">\n            Address is required\n          </span>\n        </ng-container>\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Email : </label>\n      <input class=\"col-3 form-control\" formControlName=\"email\" type=\"text\" placeholder=\"Email\" value=\"{{user.Email}}\" />\n        <ng-container *ngIf=\"emailControl.invalid && emailControl.dirty\">\n          <span class=\"ml-2\" *ngIf=\"emailControl.errors.pattern\">\n            Invalid Email\n          </span>\n          <span class=\"ml-2\" *ngIf=\"emailControl.errors.minlength\">\n            Email is too short\n          </span>\n          <span class=\"ml-2\" *ngIf=\"emailControl.errors.required\">\n            Email is required\n          </span>\n          <span class=\"ml-2\" *ngIf=\"emailControl.errors.existingEmail\">\n            Email Existing\n          </span>\n        </ng-container>\n    </div>\n\n    <input type=\"submit\" value=\"Update\" [disabled]=\"userForm.invalid\" class=\"btn btn-success\"/>\n  </form>\n\n</div>\n","import { environment as env } from './../../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class HeadersInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    // The logic will be here ...\r\n    console.log('in the headers interceptor => ', req, next);\r\n\r\n    if(env.isAuthorize) {\r\n\r\n      const token = this.getToken();\r\n\r\n      const modifiedRequest = req.clone({\r\n        // url: req.url.replace('http', 'https'),\r\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\r\n      });\r\n\r\n      console.log('in the headers interceptor (Modified Request)=> ', modifiedRequest);\r\n\r\n      return next.handle(modifiedRequest);\r\n    }\r\n\r\n    return next.handle(req);\r\n  }\r\n\r\n  private getToken(): string {\r\n    return sessionStorage.getItem('token');\r\n  }\r\n}\r\n","import { ProductResolver } from './core/guards/product.resolver';\nimport { DetailsProductComponent } from './components/products/details-product/details-product.component';\nimport { RemoveProductComponent } from './components/products/remove-product/remove-product.component';\nimport { EditProductComponent } from './components/products/edit-product/edit-product.component';\nimport { AddProductComponent } from './components/products/add-product/add-product.component';\nimport { ShowProductsComponent } from './components/products/show-products/show-products.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegistrationComponent } from './components/registration/registration.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { ProductsResolver } from './core/guards/products.resolver';\nimport { UserComponent } from './components/user/user.component';\nimport { UpdateUserComponent } from './components/user/update-user/update-user.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\n  {path: 'home', component: HomeComponent},\n  {path: 'registration', component: RegistrationComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'user', component: UserComponent,\n    canActivate: [AuthGuard]},\n  {path: 'user/update', component: UpdateUserComponent},\n  {path: 'products', component: ProductsComponent,\n    canActivate: [AuthGuard],\n    children:[\n    {path: '', redirectTo: 'show', pathMatch: 'full'},\n    {path: 'show', component: ShowProductsComponent,\n      resolve: {myData: ProductsResolver},\n    },\n    {path: 'add', component: AddProductComponent},\n    {path: 'details/:id', component: DetailsProductComponent,\n      resolve: {items: ProductResolver},\n    },\n    {path: 'edit/:id', component: EditProductComponent},\n    {path: 'remove/:id', component: RemoveProductComponent}\n  ]},\n  {path: '**', component: ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Observable, of } from 'rxjs';\r\nimport { AccessAPIService } from 'src/app/access-api.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsResolver implements Resolve<any> {\r\n\r\n  constructor(private accessAPIService: AccessAPIService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> {\r\n\r\n    return this.accessAPIService.getAll(this.accessAPIService.productUrl).pipe(\r\n      catchError(() => {\r\n        return of('Not Found');\r\n      })\r\n    );\r\n  }\r\n\r\n}\r\n","import { environment as env } from './../../../environments/environment';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccessAPIService } from 'src/app/access-api.service';\nimport { User } from 'src/app/core/models/user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit{\n\n  user: User;\n\n  constructor(private accessAPIService: AccessAPIService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.refreshView();\n  }\n\n  onSubmit(): void {\n    this.router.navigate(['user/update']);\n  }\n\n  private refreshView(): void {\n    this.accessAPIService.getOne(this.accessAPIService.userUrl, env.userID).subscribe(\n      data => this.user = data,\n      error => console.log(error)\n    );\n  }\n\n}\n","<div class=\"alert alert-secondary\">\n\n  <form (ngSubmit)=\"onSubmit()\" *ngIf=\"user\">\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Name : </label>\n      <labe class=\"col-3 form-control-plaintext\">{{user.Name}}</labe>\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Age : </label>\n      <labe class=\"col-3 form-control-plaintext\">{{user.Age}}</labe>\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Address : </label>\n      <labe class=\"col-3 form-control-plaintext\">{{user.Address}}</labe>\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n    <div class=\"row form-group\">\n      <label class=\"col-1 col-form-label p-2\">Email : </label>\n      <labe class=\"col-3 form-control-plaintext\">{{user.Email}}</labe>\n      <!-- <span class=\"col-3\">Error</span> -->\n    </div>\n\n    <input type=\"submit\" value=\"Update\" class=\"btn btn-success\"/>\n  </form>\n\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}